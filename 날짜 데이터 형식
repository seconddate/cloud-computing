다음 표에서는 각 표준 패턴과 표준 패턴을 수정하기 위해 설정할 수 있는 관련 DateTimeFormatInfo 속성에 대한 표준 형식 문자를 보여 줍니다.
이러한 형식 문자는 대/소문자를 구분합니다. 예를 들어, 'g'와 'G'는 약간 다른 패턴을 나타냅니다.

형식문자	속성	예제
d	M/d/yyyy 
(ShortDatePattern)	2002-01-03
1/3/2002
D	dddd, MMMM dd, yyyy 
(LongDatePattern)	2002년 1월 3일 목요일
Thursday, January 03, 2002
f	 	2002년 1월 3일 목요일 오전 9:10
Thursday, January 03, 2002 12:00 AM
F	dddd, MMMM dd, yyyy h:mm:ss tt 
(FullDateTimePattern)	2002년 1월 3일 목요일 오전 9:10:32
Thursday, January 03, 2002 12:00:00 AM
g	 	2002-01-03 오전 9:10
1/3/2002 12:00 AM
G	 	2002-01-03 오전 9:10:32
1/3/2002 12:00:00 AM
m, M	MMMM dd 
(MonthDayPattern)	1월 3일
January 03
r, R	ddd, dd MMM yyyy HH':'mm':'ss 'GMT'
(RFC1123Pattern)	Thu, 03 Jan 2002 09:10:32 GMT
Thu, 03 Jan 2002 00:00:00 GMT
s	yyyy'-'MM'-'dd'T'HH':'mm':'ss
(SortableDateTimePattern)	2002-01-03T09:10:32
2002-01-03T00:00:00
t	h:mm tt 
(ShortTimePattern)	오전 9:10
12:00 AM
T	
h:mm:ss tt 
(LongTimePattern)

오전 9:10:32
12:00:00 AM
u	yyyy'-'MM'-'dd HH':'mm':'ss'Z' (UniversalSortableDateTimePattern)
2002-01-03 09:10:32Z
2002-01-03 00:00:00Z
U	 	2002년 1월 3일 목요일 오전 12:10:32
Thursday, January 03, 2002 8:00:00 AM
y, Y	MMMM, yyyy 
(YearMonthPattern)	2002년 1월
January, 2002
다음 표에서는 조합하여 사용자 지정 패턴을 생성할 수 있는 패턴을 보여 줍니다. 
이러한 패턴은 대/소문자를 구분합니다. 예를 들어, "MM"은 사용할 수 있지만 "mm"은 사용할 수 없습니다. 
사용자 지정 패턴에 공백 문자나 작은따옴표(')로 둘러싸인 문자가 들어 있으면 출력 문자열에 해당 문자가 포함됩니다. 
형식 패턴의 일부나 형식 문자로 정의되지 않은 문자는 그대로 나타납니다.

형식패턴

설명
d	날짜. 숫자 하나인 일자에는 앞에 0이 붙지 않습니다.
dd	날짜. 숫자 하나인 일자에는 앞에 0이 붙습니다.
ddd	AbbreviatedDayNames 에 정의된 약식 요일 이름
dddd	DayNames 에 정의된 자세한 요일 이름
M	숫자로 표현된 월. 숫자 하나인 월에는 앞에 0이 붙지 않습니다.
MM	숫자로 표현된 월. 숫자 하나인 월에는 앞에 0이 붙습니다.
MMM	AbbreviatedMonthNames 에 정의된 약식 월 이름
MMMM	MonthNames 에 정의된 자세한 월 이름
y	세기 표시 제외 연도. 세기 부분을 제외한 연도가 10보다 작은 경우 연도 앞에 0이 붙지 않습니다.
yy	세기 표시 제외 연도. 세기 부분을 제외한 연도가 10보다 작은 경우 연도 앞에 0이 붙습니다.
yyyy	세기를 포함한 네 자리 숫자 연도
gg	서기. 형식이 지정될 날짜에 연관된 서기 문자열이 없는 경우 이 패턴은 무시됩니다.
h	12시간제 시간. 숫자 하나인 시간에는 앞에 0이 붙지 않습니다.
hh	12시간제 시간. 숫자 하나인 시간에는 앞에 0이 붙습니다.
H	24시간제 시간. 숫자 하나인 시간에는 앞에 0이 붙지 않습니다.
HH	24시간제 시간. 숫자 하나인 시간에는 앞에 0이 붙습니다.
m	분. 숫자 하나인 분에는 앞에 0이 붙지 않습니다.
mm	분. 숫자 하나인 분에는 앞에 0이 붙습니다.
s	초. 숫자 하나인 초에는 앞에 0이 붙지 않습니다.
ss	초. 숫자 하나인 초에는 앞에 0이 붙습니다.
f	한 자리 정밀도에서 초의 소수 부분입니다. 나머지 자릿수는 잘립니다.
ff	두 자리 정밀도에서 초의 소수 부분입니다. 나머지 자릿수는 잘립니다.
fff	세 자리 정밀도에서 초의 소수 부분입니다. 나머지 자릿수는 잘립니다.
ffff	네 자리 정밀도에서 초의 소수 부분입니다. 나머지 자릿수는 잘립니다.
fffff	다섯 자리 정밀도에서 초의 소수 부분입니다. 나머지 자릿수는 잘립니다.
ffffff	여섯 자리 정밀도에서 초의 소수 부분입니다. 나머지 자릿수는 잘립니다.
fffffff	일곱 자리 정밀도에서 초의 소수 부분입니다. 나머지 자릿수는 잘립니다.
t	AMDesignator 또는 PMDesignator 에 정의된 AM/PM 지정자의 첫 문자입니다.
tt	AMDesignator 또는 PMDesignator 에 정의된 AM/PM 지정자입니다.
z	시간대 오프셋("+" 또는 "-" 뒤에 시간만 옴)입니다. 숫자 하나인 시간에는 앞에 0이 붙지 않습니다. 예를 들어, 태평양 표준시는 "-8"입니다.
zz	시간대 오프셋("+" 또는 "-" 뒤에 시간만 옴)입니다. 숫자 하나인 시간에는 앞에 0이 붙습니다. 
예를 들어, 태평양 표준시는 "-08"입니다.
zzz	자세한 시간대 오프셋("+" 또는 "-" 뒤에 시간과 분이 옴)입니다. 
숫자 하나인 시간과 분에는 앞에 0이 붙습니다. 예를 들어, 태평양 표준시는 "-08:00"입니다.
:	TimeSeparator 에 정의된 기본 시간 구분 문자입니다.
/	DateSeparator 에 정의된 기본 날짜 구분 문자입니다.
% c	여기서 c 는 단독으로 사용된 경우의 형식 패턴 문자입니다. 형식 패턴 문자가 리터럴 문자나 다른 형식 패턴 문자와 조합되어 사용될 경우 "%" 문자를 생략할 수 있습니다.
\ c	여기서 c 는 임의의 문자입니다. 문자를 그대로 표시합니다. 백슬래시 문자를 표시하려면 "\\"을 사용합니다.
위의 두 번째 표에 나열된 형식 패턴을 사용해야만 사용자 지정 패턴을 만들 수 있으며, 첫 번째 표에 나열된 표준 형식 문자를 사용하면 사용자 지정 패턴을 만들 수 없습니다. 사용자 지정 패턴은 다음처럼 최소한 두 문자 길이입니다.

DateTime.ToString( "d")는 DateTime 값을 반환합니다. "d"는 간단한 날짜 패턴의 표준입니다.
DateTime.ToString( "%d")는 월의 일자를 반환합니다. "%d"는 사용자 지정 패턴입니다.
DateTime.ToString( "d ")는 월의 일자와 그 다음에 공백 문자를 반환합니다. "d "는 사용자 지정 패턴입니다.
